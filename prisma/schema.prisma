// Learn more about this file in the docs: https://pris.ly/d/prisma-schema
datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native"]
}

model User {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  email      String   @unique
  name       String?
  creds      UserCred
  orders Order[]
}

model UserCred {
  id Int @id @default(autoincrement())
  user User? @relation(fields: [userId], references: [id])
  userId  Int?
  updatedAt DateTime @updatedAt
}

model Restaurant {
  id Int @id @default(autoincrement())
  name String
  location String
  rating Decimal?
  menu MenuItem[]

  @@index(fields: [name, location], name: "restaurant_index")
}

model MenuItem {
  id Int @id @default(autoincrement())
  name String
  category String
  unitPrice Decimal
  restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId Int

  orderItems OrderItem[]

  @@index(fields: [name, category], name: "menu_item_index")
  @@unique([name, category, restaurantId])
}

model DeliveryPerson {
  id Int @id @default(autoincrement())
  name String
  contactNo String @unique
  averageRating Decimal?
  orders Order[]
}

model OrderItem {
  id Int @id @default(autoincrement())
  quantity Int
  price Decimal
  menuItem MenuItem @relation(fields: [menuId], references: [id])
  menuId Int
  order Order @relation(fields: [orderId], references: [id])
  orderId Int
}

model Order {
  id Int @id @default(autoincrement())
  user User?  @relation(fields: [userId], references: [id])
  userId Int?
  status OrderStatus @default(CREATED)
  createdAt DateTime @default(now())
  serviceCharge Decimal
  gst Decimal
  total Decimal
  discountApplied Decimal
  deliveredAt DateTime?
  deliverPerson DeliveryPerson? @relation(fields: [deliveryPersonId], references: [id])
  deliveryPersonId Int?
  orderItem OrderItem[]
  payment Payment? @relation(fields: [paymentId], references: [id])
  paymentId Int?
}

enum OrderStatus {
  CREATED
  PENDING
  DELIVERED
  CANCELLED
}

model Payment {
  id Int @id @default(autoincrement())
  transactionId String @default(cuid())
  order Order
  type PaymentType @default(COD)
}

enum PaymentType {
  COD
  UPI
  EWALLET
  ONLINE
  DEBITCARD
  CREDITCARD
}